generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int               @id @default(autoincrement())
  email           String            @unique
  lastName        String
  firstName       String
  password        String
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  Orders          Order[]
  Company         Company[]
  Addresses       Address[]
  ProfilePictures ProfilePictures[]
  role            UserPermission    @default(USER)
}

model Product {
  id          Int        @id @default(autoincrement())
  ean         String?
  GUID        String?
  name        String?
  description String?
  inStock     Boolean?   @default(false)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  categories  Category[]
  order       Order[]
  Basket      Basket[]
  images      Image[]
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  products    Product[]
}

model Order {
  id              Int       @id @default(autoincrement())
  referenceNumber Int?
  price           Float?
  paid            Boolean   @default(false)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  user            User[]
  products        Product[]
}

model Image {
  id      Int       @id @default(autoincrement())
  // Alt text c'est la description si jamais l'image ne passe pas.
  altText String?
  url     String?
  Product Product[]
}

model Address {
  id               Int       @id @default(autoincrement())
  streetName       String
  streetNumber     Int
  postalCode       Int
  cityName         String
  country          String
  extraInformation String?
  Company          Company[]
  User             User[]
}

// - TODO: Rajouter des attributs à entreprise? Il manque peut-être des trucs.

model Company {
  id        Int       @id @default(autoincrement())
  name      String
  phone     String?
  website   String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Addresses Address[]
  Contacts  User[]
}

model Basket {
  id               Int       @id @default(autoincrement())
  name             String?
  price            Int?
  subscriptionType String?
  Products         Product[]
}

// - TODO: Modifier le nom des types dans l'enum
enum TypeSubscription {
  TEST1
  TEST2
}

model Subscription {
  id       Int               @id @default(autoincrement())
  type     TypeSubscription?
  price    Int?
  duration Int?
}

// // C'est un WIP, hein? Mais si on gère le backoffice, ca, ca marche.
// model UserRole {
//   id                 Int     @id @default(autoincrement())
//   roleName           String?
//   permissions        UserPermission @default(USER)
// }

enum UserPermission {
  USER
  PRODUCTMANAGER
  ADMIN
  DEVDEBUG
}

model ProfilePictures {
  id             Int     @id @default(autoincrement())
  avatarLocation String?

  User User[]
}
