// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int     @id @default(autoincrement())
  email              String  @unique
  lastName           String
  firstName          String
  password           String
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  orders             Order[]
}

model Product {
  id                 Int     @id @default(autoincrement())
  name               String?
  description        String?
  inStock            Boolean? @default(false)
  category           CategoryOnProducts[]
}

model Category {
  id                Int     @id @default(autoincrement())
  name              String
  description       String?
  products          CategoryOnProducts[]
}

model CategoryOnProducts{
  @@id([productId, categoryId])
  product           Product @relation(fields: [productId], references: [id])
  productId         Int
  category          Category @relation(fields: [categoryId], references: [id])
  categoryId        Int
}

model Image {
  id                Int     @id @default(autoincrement())
  url               String?
}

model Adress {
  id                Int     @id @default(autoincrement())
  streetName        String
  streetNumber      Int
  postalCode        Int
  cityName          String
  country           String
  extraInformation  String?
}

model Company {
  id                Int     @id @default(autoincrement())
  name              String?
}

model Order {
  id                Int     @id @default(autoincrement())
  User User[]
}

model Basket {
  id                Int     @id @default(autoincrement())
  name              String?
  price             Int?
  subscriptionType  String?
}

// - TODO: Modifier le nom de cet Enum
enum TypeSubscription {
  TEST1
  TEST2
}

model Subscription {
  id                Int     @id @default(autoincrement())
  type              TypeSubscription?
  price             Int?
  duration          Int?
}

